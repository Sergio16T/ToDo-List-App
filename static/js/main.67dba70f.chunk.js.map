{"version":3,"sources":["modalBox.js","navSideBar.js","button.js","todoList.js","App.js","homePage.js","devToDo.js","personal.js","newProject.js","router.js","serviceWorker.js","index.js"],"names":["ModalBox","className","this","props","id","htmlFor","onChange","handleProjectInput","name","value","text","handlePriorityInput","priorityText","type","onClick","buttonMethod","submitMethod","React","Component","NavSideBar","state","projects","projectTitle","Math","random","path","rightArrowClassName","projectListClassName","modalBoxClassName","rotateArrow","bind","openModal","cancelModal","addProject","setState","length","newProject","priority","concat","e","target","style","display","responsive","map","project","to","key","clickHam","Button","isToggled","setToggle","div","index","borderRadius","width","height","padding","margin","alignItems","justifyContent","color","cursor","animate","variants","active","opacity","background","x","scale","inactive","TodoList","items","item","App","_isMounted","updateDimensions","window","innerWidth","handleChange","handleSubmit","openMenu","clickHamburger","addEventListener","document","removeEventListener","ref","onSubmit","button","outline","border","cursour","whileHover","whileTap","y","preventDefault","newItem","Date","now","refs","hamburger","click","HomePage","DevToDo","Personal","Project","Router","basename","process","exact","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67dba70f.chunk.js","sourcesContent":["import React  from 'react';\nimport './modalBox.css';\n\nclass ModalBox extends React.Component {\n\n    render() {\n        return (\n            <div className = {this.props.className}>\n                <div className=\"modal-container\">\n                <form id=\"modal-form\">\n                    <header id=\"modal-header\">\n                        <p id=\"header-message\">Add Project</p>\n                    </header>\n                    <section>\n                        <div className =\"form-field\">\n                            <label htmlFor =\"project-name-add\">Project name</label>\n                            <input onChange ={this.props.handleProjectInput} id=\"project-name-add\" name=\"name\" value ={this.props.text}></input>\n                        </div>\n                        <div className =\"form-field\">\n                            <label htmlFor =\"project-priority-add\">Priority</label>\n                            <input onChange ={this.props.handlePriorityInput} id=\"project-priority-add\" name=\"priority\" value={this.props.priorityText}></input>\n                        </div>\n                    </section>\n                    <footer id =\"modal-footer\">\n                        <button type=\"button\" onClick ={this.props.buttonMethod} id=\"modal-cancel\">Cancel</button>\n                        <button type =\"button\" onClick ={this.props.submitMethod} id =\"modal-submit\">Add</button>\n                    </footer>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ModalBox; ","import React from 'react';\nimport ModalBox from './modalBox'; \nimport {Link} from 'react-router-dom'; \nimport './navSideBar.css'; \nimport './modalBox.css'; \n\n\nclass NavSideBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            projects: [{projectTitle: 'Welcome', id: Math.random(), path: \"/\"},{projectTitle: 'Development', id: Math.random(), path: \"/devToDo\"}, {projectTitle: 'Personal', id: Math.random(), path: \"/personal\" }],\n            rightArrowClassName: 'right-arrow',\n            projectListClassName: 'project-list',\n            modalBoxClassName: 'modalBox inactive',\n            text: '',\n            priorityText: ''\n         \n        }\n        this.rotateArrow = this.rotateArrow.bind(this); \n        this.openModal = this.openModal.bind(this); \n        this.cancelModal = this.cancelModal.bind(this); \n        this.addProject = this.addProject.bind(this);\n        this.handleProjectInput = this.handleProjectInput.bind(this);\n        this.handlePriorityInput = this.handlePriorityInput.bind(this); \n        \n\n    }\n \n    rotateArrow() {\n        if (this.state.rightArrowClassName === 'right-arrow'){\n            this.setState({\n                rightArrowClassName: 'right-arrow rotate',\n                projectListClassName: 'project-list-active'\n            }); \n        } else {\n            this.setState({\n                rightArrowClassName: 'right-arrow',\n                projectListClassName: 'project-list'\n            });\n        } \n    }\n    openModal() {\n        this.setState({\n            modalBoxClassName: 'modalBox',\n        }); \n    }\n    cancelModal() {\n        this.setState({\n            modalBoxClassName: \"modalBox inactive\",\n        })\n    }\n    addProject() {\n        if (!this.state.text.length | !this.state.priorityText.length) {\n            return; \n        }\n\n        const newProject = {\n            projectTitle: this.state.text,\n            id: Math.random(),\n            priority: this.state.priorityText,\n            path : '/project'\n        }\n        this.setState({\n            projects: this.state.projects.concat(newProject), \n            text: '',\n            priorityText: ''\n        });\n        this.cancelModal(); \n    }\n    handleProjectInput(e){\n        this.setState({\n            text: e.target.value\n\n        });\n    }\n    handlePriorityInput(e){\n        this.setState({\n            priorityText: e.target.value\n        }); \n    }\n \n    render() {\n        return (\n            <div className =\"navSideBar-wrapper\">\n            <ModalBox \n                className ={this.state.modalBoxClassName} \n                buttonMethod ={this.cancelModal} \n                submitMethod ={this.addProject}\n                handleProjectInput = {this.handleProjectInput}\n                handlePriorityInput = {this.handlePriorityInput}\n                text = {this.state.text}\n                priorityText = {this.state.priorityText}\n            />\n            <div style ={{display: this.props.responsive ? 'block' : 'none'}} className ='navSideBar-Container'>\n                <div className='panel-wrapper'>\n                <div className =\"expansionPanel\">\n                    <header id=\"navSideBar-header\">\n                        <button className ={this.state.rightArrowClassName} onClick= {this.rotateArrow}>&#8250;</button>\n                        <button id=\"projectsButton\">Projects</button>\n                        <i onClick = {this.openModal} id=\"plus\" className = 'fas fa-plus'></i>\n                    </header>\n                    <ul className= {this.state.projectListClassName}>\n                        {this.state.projects.map(project => (\n                            <Link to ={project.path} key={project.id} onClick={this.props.clickHam}><li className=\"project-item\">{project.projectTitle}</li></Link>\n                        ))}\n                        \n                    </ul>\n                </div>\n                <div className =\"expansionPanel\"></div>\n                <div className =\"expansionPanel\"></div>\n                </div>\n            </div>\n            </div>\n        )\n    }\n\n}\n\nexport default NavSideBar; \n\n\n//expansionPanel needs it's own component & module reduce lines of codein this module\n","import React  from 'react';\nimport { motion } from 'framer-motion'; \n\nclass Button extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isToggled: false\n        }\n        this.setToggle = this.setToggle.bind(this); \n    }\n    setToggle() {\n            if (!this.state.isToggled) {\n            this.setState({\n                isToggled: true\n                }); \n            } else {\n                this.setState({\n                    isToggled: false\n                }); \n            }   \n    }\n\n    render() {\n    const styles1 = {\n        borderRadius: 30,\n        width: 65,\n        height: 65,\n        padding: 10,\n        margin:\"auto\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        color: \"white\", \n        cursor: \"pointer\"\n        }; \n        const variants = {\n        active: {\n            opacity: 1, \n            background: \"#7fffd4\",\n            x: \"-10px\",\n            scale: 1.25,\n        },\n        inactive: {\n            opacity: 1,\n            background: \"#f95c5c\",\n            x: \"30px\",\n            scale: 1,\n        }\n        };\n        return (\n            <motion.div\n            key = {this.props.index}\n            className=\"toggleButton\"\n            onClick={() => this.setToggle()}\n            style ={styles1}\n            animate ={this.state.isToggled ? \"active\" : \"inactive\"}\n            variants ={variants}\n          >\n            <span style ={{color: this.state.isToggled ? \"#333\" : \"white\"}}>{this.state.isToggled? \"Complete\" : \"Not Complete\"}</span>\n          </motion.div>\n        )\n    }\n}\n\nexport default Button; ","import React from 'react';\nimport Button from './button';\nimport './App.css';\n\n\nfunction TodoList(props) {\n    return (\n      <ul>\n        {props.items.map((item, index) => (\n          <div key = {`${index}a`} className ='itemContainer'>\n          <li className ='listItems' key={item.id}>{item.text}</li>\n          <Button index ={index}></Button>\n          </div>\n        ))}\n      </ul>\n    );\n  \n}\nexport default TodoList; ","import React from 'react';\nimport { motion } from 'framer-motion'; \nimport NavSideBar from './navSideBar';\nimport TodoList from './todoList'; \nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    //this.state = { items: [{text: 'Schedule meeting with senior developer', id: Date.now()}, {text: 'Become a Javascript Ninja', id: Date.now()}], text: '' };\n    this.state = {\n      items: this.props.items,\n      text: '',\n      responsive: true,\n      width: window.innerWidth\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.openMenu = this.openMenu.bind(this); \n    this.clickHamburger = this.clickHamburger.bind(this);\n   \n\n  }\n_isMounted  = false;\ncomponentDidMount() {\n  this._isMounted  = true; \n  this.clickHamburger();\n  window.addEventListener('resize', this.updateDimensions.bind(this));\n  document.addEventListener('DOMContentLoaded', this.updateDimensions.bind(this)); // this listener should be on the Document Object? \n}\n\n\ncomponentWillUnmount() {\n  this._isMounted = false; \n  window.removeEventListener('resize', this.updateDimensions.bind(this));\n  document.removeEventListener('DOMContentLoaded', this.updateDimensions.bind(this)); \n}\n\n\n  render() {\n    const styles = {\n      background: \"#7fffd4\",\n      borderRadius: 30,\n      width: 100, \n      padding: \"10px 20px\",\n      margin: \"0vh 2vh\",\n      color: \"#333\",\n      outline: \"none\",\n      border: \"none\",\n      cursour: \"pointer\"\n    };\n    return (\n      <div>\n        <div className=\"app-header\">\n        <i ref =\"hamburger\" onClick = {this.openMenu} id =\"hamburger\" className=\"fas fa-bars\"></i>\n        <h3>To Do List</h3>\n        </div>\n        <div className =\"wrapper\">\n        <NavSideBar responsive ={this.state.responsive} clickHam ={this.clickHamburger} />\n        <div className='listContainer'>\n        <form onSubmit={this.handleSubmit}>\n          <label id= \"inputLabel\" htmlFor=\"new-todo\">\n            What needs to be done?\n          </label>\n          <input\n            id=\"new-todo\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <motion.button \n          style ={styles}\n          whileHover ={{scale: 1.1}}\n          whileTap ={{scale: 0.9, x: \"-5px\", y: \"5px\"}}\n          >\n            <i className=\"fas fa-plus\"></i>\n          </motion.button>\n        </form>\n        <TodoList items={this.state.items} /> \n        </div>\n        </div>\n      </div>\n    );\n  }\n  //Sets state of text to input value on change \n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (!this.state.text.length) {\n      //prevent's empty text from being added to TO DO\n      return;\n    }\n    const newItem = {\n      text: this.state.text, // grabs text from state set by handleChange(e)\n      id: Date.now()\n    };\n\n    this.setState(state => ({\n      items: state.items.concat(newItem), // taking value of state.items and using concat which returns a new array of merged (existing array containing object(s) with addition of new object)\n      text: '' // resets to empty string ready for next input to use handleChange(e)\n    }));\n  }\n\n  updateDimensions =() => {\n    if(this._isMounted){\n      this.setState({\n        width: window.innerWidth\n      });\n      if (this.state.width < 720){\n        this.setState({\n          responsive: false  \n        });\n      }\n      if (this.state.width >= 720){\n        this.setState({\n          responsive: true\n        });\n      }\n      // note took this.openMenu() out changed false and true to opposites \n    }\n  }\n\n  openMenu() {\n   \n    if(this.state.responsive) {\n      this.setState({\n        responsive: false\n      });\n    } else {\n      this.setState({\n        responsive: true\n      });\n    }\n    if(this.state.width >= 720) {\n    this.setState({\n      responsive: true\n    });\n  }\n\n  }\n\n  clickHamburger(){\n    this.refs.hamburger.click(); \n  }\n\n \n\n}\n\n\nexport default App;\n\n\n","import React from 'react';\nimport App from './App'; \nimport './App.css';\n\n\nclass HomePage extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { items: [{text: 'Welcome! Create a task!', id: Date.now()}, {text: 'Become a JavaScript Ninja', id: Date.now()}], text: '' };\n    }\n   render() {\n       return (\n           <App items ={this.state.items}></App>\n       )\n   }\n}\n  \n\n  export default HomePage;","import React from 'react';\nimport App from './App'; \n\nclass DevToDo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { items: [{text: 'Schedule meeting with senior developer', id: Date.now()}, {text: 'Become a JavaScript Ninja', id: Date.now()}], text: '' };\n      }\n    render() {\n        return (\n            <App items ={this.state.items}></App>\n        )\n    }\n}\n\nexport default DevToDo; ","import React from 'react'; \nimport App from './App'; \n\nclass Personal extends React.Component {\n    constructor(){\n        super();\n        this.state = {items:[{text: 'Schedule a dentist appointment', id: Math.random()}], text: ''}\n    }\n    render() {\n        return (\n            <App items ={this.state.items}/>\n        )\n    }\n}\n\nexport default Personal; ","import React from 'react'; \nimport App from './App'; \nimport './App.css';\n\n\n\nclass Project extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state = { \n        items: [{text: 'Welcome! Create a task!', id: Date.now()}], text: ''}\n  }\n render() {\n     return (\n         <App items ={this.state.items}></App>\n     )\n }\n}\n\nexport default Project; ","import React from 'react';\nimport HomePage from './homePage'; \nimport DevToDo from './devToDo'; \nimport Personal from './personal'; \nimport Project from './newProject'; \nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css'; \n\n\nclass Router extends React.Component {\n    render(){\n        return (\n            <BrowserRouter basename ={process.env.PUBLIC_URL}>\n                <Route exact path = \"/\" component ={HomePage}></Route> \n                <Route path = \"/devToDo\" component ={DevToDo}></Route>\n                <Route path = \"/personal\" component= {Personal}></Route>\n                <Route path = \"/project\" component = {Project}></Route>    \n            </BrowserRouter>\n\n            \n        )\n    }\n}\n\nexport default Router; \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}